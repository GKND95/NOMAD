{"ast":null,"code":"import \"antd/es/slider/style\";\nimport _Slider from \"antd/es/slider\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nvar _jsxFileName = \"/Users/yanivsilberman/Desktop/NOMAD/app/src/components/Water/index.js\";\nimport React, { useContext } from 'react';\nimport { _Context } from '../../App';\n\nconst Water = () => {\n  const _useContext = useContext(_Context),\n        water = _useContext.state.water,\n        dispatch = _useContext.dispatch;\n\n  const setWater = payload => dispatch({\n    type: 'UPDATE_WATER',\n    payload\n  });\n\n  return React.createElement(_Slider, {\n    tipFormatter: () => React.createElement(_Icon, {\n      type: \"smile\",\n      theme: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }),\n    defaultValue: 50,\n    value: water,\n    max: 100,\n    min: 0,\n    onChange: setWater,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  });\n};\n\nexport default Water;","map":{"version":3,"sources":["/Users/yanivsilberman/Desktop/NOMAD/app/src/components/Water/index.js"],"names":["React","useContext","_Context","Water","water","state","dispatch","setWater","payload","type"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,QAAT,QAAyB,WAAzB;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA,sBACqBF,UAAU,CAACC,QAAD,CAD/B;AAAA,QACDE,KADC,eACVC,KADU,CACDD,KADC;AAAA,QACQE,QADR,eACQA,QADR;;AAGlB,QAAMC,QAAQ,GAAGC,OAAO,IACtBF,QAAQ,CAAC;AAACG,IAAAA,IAAI,EAAE,cAAP;AAAuBD,IAAAA;AAAvB,GAAD,CADV;;AAGA,SACE;AACE,IAAA,YAAY,EAAE,MAAM;AAAM,MAAA,IAAI,EAAC,OAAX;AAAmB,MAAA,KAAK,EAAC,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADtB;AAEE,IAAA,YAAY,EAAE,EAFhB;AAGE,IAAA,KAAK,EAAEJ,KAHT;AAIE,IAAA,GAAG,EAAE,GAJP;AAKE,IAAA,GAAG,EAAE,CALP;AAME,IAAA,QAAQ,EAAGG,QANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAUD,CAhBD;;AAkBA,eAAeJ,KAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { _Context } from '../../App';\nimport { Slider, Icon } from 'antd';\n\nconst Water = () => {\n  const { state: { water }, dispatch } = useContext(_Context);\n\n  const setWater = payload => \n    dispatch({type: 'UPDATE_WATER', payload});\n\n  return (\n    <Slider \n      tipFormatter={() => <Icon type=\"smile\" theme=\"outlined\" /> }\n      defaultValue={50} \n      value={water}\n      max={100}\n      min={0}\n      onChange={ setWater }\n    />\n  )\n}\n\nexport default Water;"]},"metadata":{},"sourceType":"module"}