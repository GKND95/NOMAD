{"ast":null,"code":"import \"antd/es/slider/style\";\nimport _Slider from \"antd/es/slider\";\nvar _jsxFileName = \"/Users/yanivsilberman/Desktop/NOMAD/app/src/components/Range/index.js\";\nimport React, { useContext } from 'react';\nimport { _Context } from '../../App';\n\nconst Bumpy = () => {\n  const _useContext = useContext(_Context),\n        state = _useContext.state,\n        dispatch = _useContext.dispatch;\n\n  const bumpy = state.bumpy,\n        water = state.water,\n        temperature = state.temperature;\n  console.log({\n    state\n  });\n\n  const setBumpy = payload => dispatch({\n    type: 'UPDATE_BUMPY',\n    payload\n  });\n\n  const setWater = payload => dispatch({\n    type: 'UPDATE_WATER',\n    payload\n  });\n\n  const setTemp = payload => dispatch({\n    type: 'UPDATE_TEMPERATURE',\n    payload\n  });\n\n  const createSlider = (min, max, set) => ({\n    val\n  }) => React.createElement(_Slider, {\n    range: true,\n    defaultValue: [0, 100],\n    value: val,\n    max: max,\n    min: min,\n    onChange: set,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  });\n\n  const WaterSlider = createSlider(0, 100, setWater);\n  const BumpySlider = createSlider(0, 100, setBumpy);\n  const TempSlider = createSlider(0, 100, setTemp);\n  return React.createElement(React.Fragment, null, React.createElement(WaterSlider, {\n    val: water,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(BumpySlider, {\n    val: bumpy,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(TempSlider, {\n    val: temperature,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }));\n};\n\nexport default Bumpy;","map":{"version":3,"sources":["/Users/yanivsilberman/Desktop/NOMAD/app/src/components/Range/index.js"],"names":["React","useContext","_Context","Bumpy","state","dispatch","bumpy","water","temperature","console","log","setBumpy","payload","type","setWater","setTemp","createSlider","min","max","set","val","WaterSlider","BumpySlider","TempSlider"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,QAAT,QAAyB,WAAzB;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA,sBACUF,UAAU,CAACC,QAAD,CADpB;AAAA,QACVE,KADU,eACVA,KADU;AAAA,QACHC,QADG,eACHA,QADG;;AAAA,QAEVC,KAFU,GAEoBF,KAFpB,CAEVE,KAFU;AAAA,QAEHC,KAFG,GAEoBH,KAFpB,CAEHG,KAFG;AAAA,QAEIC,WAFJ,GAEoBJ,KAFpB,CAEII,WAFJ;AAIlBC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEN,IAAAA;AAAF,GAAZ;;AAEA,QAAMO,QAAQ,GAAGC,OAAO,IACtBP,QAAQ,CAAC;AAACQ,IAAAA,IAAI,EAAE,cAAP;AAAuBD,IAAAA;AAAvB,GAAD,CADV;;AAGA,QAAME,QAAQ,GAAGF,OAAO,IACtBP,QAAQ,CAAC;AAACQ,IAAAA,IAAI,EAAE,cAAP;AAAuBD,IAAAA;AAAvB,GAAD,CADV;;AAGA,QAAMG,OAAO,GAAGH,OAAO,IACrBP,QAAQ,CAAC;AAACQ,IAAAA,IAAI,EAAE,oBAAP;AAA6BD,IAAAA;AAA7B,GAAD,CADV;;AAGA,QAAMI,YAAY,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAWC,GAAX,KAAmB,CAAC;AAACC,IAAAA;AAAD,GAAD,KACtC;AACE,IAAA,KAAK,MADP;AAEE,IAAA,YAAY,EAAE,CAAC,CAAD,EAAI,GAAJ,CAFhB;AAGE,IAAA,KAAK,EAAEA,GAHT;AAIE,IAAA,GAAG,EAAEF,GAJP;AAKE,IAAA,GAAG,EAAED,GALP;AAME,IAAA,QAAQ,EAAGE,GANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;;AAWA,QAAME,WAAW,GAAGL,YAAY,CAAC,CAAD,EAAI,GAAJ,EAASF,QAAT,CAAhC;AACA,QAAMQ,WAAW,GAAGN,YAAY,CAAC,CAAD,EAAI,GAAJ,EAASL,QAAT,CAAhC;AACA,QAAMY,UAAU,GAAGP,YAAY,CAAC,CAAD,EAAI,GAAJ,EAASD,OAAT,CAA/B;AAEA,SACE,0CACE,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAER,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAED,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAEE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CArCD;;AAuCA,eAAeL,KAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { _Context } from '../../App';\nimport { Slider } from 'antd';\n\nconst Bumpy = () => {\n  const { state, dispatch } = useContext(_Context);\n  const { bumpy, water, temperature } = state;\n\n  console.log({ state });\n\n  const setBumpy = payload => \n    dispatch({type: 'UPDATE_BUMPY', payload});\n  \n  const setWater = payload => \n    dispatch({type: 'UPDATE_WATER', payload});\n  \n  const setTemp = payload =>\n    dispatch({type: 'UPDATE_TEMPERATURE', payload});\n\n  const createSlider = (min, max, set) => ({val}) => (\n    <Slider \n      range \n      defaultValue={[0, 100]} \n      value={val}\n      max={max}\n      min={min}\n      onChange={ set }\n    />\n  );\n\n  const WaterSlider = createSlider(0, 100, setWater);\n  const BumpySlider = createSlider(0, 100, setBumpy);\n  const TempSlider = createSlider(0, 100, setTemp);\n\n  return (\n    <>\n      <WaterSlider val={water} />\n      <BumpySlider val={bumpy} />\n      <TempSlider val={temperature} />\n    </>\n  )\n}\n\nexport default Bumpy;"]},"metadata":{},"sourceType":"module"}